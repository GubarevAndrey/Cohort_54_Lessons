package less24.interfaces;

    /*
    Интерфейс- ссылочный тип Java
    Интерфейс- совокупность абстрактных методов
    Интерфейсы похожи на написание Абстрактных классов, но
    Абстрактный класс описывает свойства и поведение будущих обьектов, а
    Интерфейс содержит только поведение , которое класс будет реализовывать.
    Т.е. в Абстрактных классах могут быть поля, конструктоы, методы.
    А в Интерфейсе только методы.

    Интерфейсы косвенно(по умолчанию) абстрактны

     */
// public abstract interface Printable { - abstract можно не писать потому что Интерфейс и така абстрактный
// ключевое слово abstract присутствует по умолчанию
/*
 Все методы интерфейса косвенно абстрактны и публичны
 */
    public interface Printable {
        void print(); // public abstract

/*
 В JDK 8 были добавлены методы по умолчанию. Это методы
 которые имеют реализацию по умолчанию. Реализация по
  умолчанию реализуется если класс не переопределит этот
  метод. Перед таким методом ставится  default
  В классе, который реализует Интерфейс необязательно
  реализовывать этот метод (с default)*/

        //  Если в Интерфейсе написать переменную то она станет константой
        // В интерфейсе могут быть определены константы
        int CONSTANT=10; // это константа
     //   public static final CONSTANT=10; -это то же самое станет


        // метод default не обязательно переопределять
    default void defaulMethod () {
       System.out.println("defaultMethod from interface");
    }

    /*
    Начиная с JDK 8 в Интерфейсе доступны статические
    методы*/
   static void staticMethod(){
       System.out.println("static method from interface");
   }

   /* Начиная с JDK 9 в Интерфейсе появились приватные
   методы. Они могут быть статические и нестатические.
   Приватные методы не могут быть переопределены в
   классе*/
   private void privateMethod(){
       System.out.println("private method from interface");
   }


}